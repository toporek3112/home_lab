version: '3'

services:
  
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: postgres
      GF_SECURITY_ADMIN_PASSWORD: postgres
      GF_PROVISIONING_PATH: /etc/grafana/provisioning
      # GF_INSTALL_PLUGINS: grafana-scenes-app
    networks:
      raspi_docker_custom_bridge:
        ipv4_address: 188.20.0.11
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
      - ./grafana/custom.ini:/etc/grafana/grafana.ini
      - ./grafana/plugins/scenes/packages/scenes/dist:/var/lib/grafana/plugins/grafana-scenes-app
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      raspi_docker_custom_bridge:
        ipv4_address: 188.20.0.12
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped

  exporter_node:
    image: prom/node-exporter
    container_name: exporter_node
    pid: "host"
    networks:
      raspi_docker_custom_bridge:
        ipv4_address: 188.20.0.13
    volumes:
      - "/:/host:ro,rslave"
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped

volumes:
  grafana_data:
  prometheus_data:
  tempo_data:

networks:
  raspi_docker_custom_bridge:
    external: true
